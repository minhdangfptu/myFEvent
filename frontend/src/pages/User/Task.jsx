import { useMemo, useState } from 'react';
import UserLayout from '../../components/UserLayout';

export default function Task() {
  const [search, setSearch] = useState('');
  const [sortBy, setSortBy] = useState('T√™n');

  const tasks = useMemo(() => ([
    { name: 'Chu·∫©n b·ªã b√†n gh·∫ø khu v·ª±c check-in', owner: 'B·∫°n (H·∫≠u c·∫ßn)', due: '10/10/2025', status: 'ƒêang l√†m', priority: 'Cao' },
    { name: 'Ki·ªÉm tra thi·∫øt b·ªã √¢m thanh', owner: 'B·∫°n (H·∫≠u c·∫ßn)', due: '11/10/2025', status: 'ƒêang l√†m', priority: 'Trung b√¨nh' },
    { name: 'Mua n∆∞·ªõc u·ªëng cho kh√°ch m·ªùi', owner: 'B·∫°n (H·∫≠u c·∫ßn)', due: '12/10/2025', status: 'ƒêang l√†m', priority: 'Th·∫•p' },
    { name: 'S·∫Øp x·∫øp kho ƒë·∫°o c·ª•', owner: 'T·∫•t c·∫£ th√†nh vi√™n ban H·∫≠u c·∫ßn', due: '13/10/2025', status: 'ƒêang l√†m', priority: 'Cao' },
    { name: 'Chu·∫©n b·ªã khu v·ª±c h·∫≠u tr∆∞·ªùng', owner: 'T·∫•t c·∫£ th√†nh vi√™n s·ª± ki·ªán', due: '14/10/2025', status: 'ƒêang l√†m', priority: 'Trung b√¨nh' }
  ]), []);

  const priorityColor = (p) => {
    if (p === 'Cao') return { color: '#DC2626' };
    if (p === 'Th·∫•p') return { color: '#16A34A' };
    return { color: '#D97706' };
  };

  // Select trung t√≠nh; m√†u hi·ªÉn th·ªã trong option c·ªßa dropdown

  return (
    <UserLayout title="S·ªë li·ªáu - Nhi·ªám v·ª•" activePage="task">
      <div className="container-fluid" style={{ maxWidth: 1100 }}>
        <style>{`
          .soft-input{background:#F9FAFB;border:1px solid #E5E7EB;border-radius:12px;height:44px}
          .soft-card{border:1px solid #E5E7EB;border-radius:16px;box-shadow:0 1px 2px rgba(16,24,40,.04)}
          .pill-select{appearance:none;border-radius:9999px;padding:.4rem .75rem;min-width:140px}
        `}</style>
        <div className="d-flex flex-wrap align-items-center gap-2 mb-3">
          <div className="position-relative">
            <input value={search} onChange={(e) => setSearch(e.target.value)} placeholder="T√¨m ki·∫øm" className="form-control ps-5 soft-input" style={{ width: 320 }} />
            <span className="position-absolute top-50 start-0 translate-middle-y ps-3 text-muted">üîç</span>
          </div>
          <div className="ms-auto d-flex align-items-center gap-2">
            <span className="small text-muted">S·∫Øp x·∫øp theo:</span>
            <select className="form-select form-select-sm soft-input" style={{ width: 160, height: 36 }} value={sortBy} onChange={(e) => setSortBy(e.target.value)}>
              <option>T√™n</option>
              <option>H·∫°n ch√≥t</option>
              <option>∆Øu ti√™n</option>
            </select>
          </div>
        </div>

        <div className="soft-card">
          <div className="table-responsive">
            <table className="table align-middle mb-0">
              <thead>
                <tr className="text-muted">
                  <th style={{ width: '35%' }}>T√™n nhi·ªám v·ª•</th>
                  <th style={{ width: '20%' }}>Ng∆∞·ªùi ph·ª• tr√°ch</th>
                  <th style={{ width: '15%' }}>H·∫°n ch√≥t</th>
                  <th style={{ width: '20%' }}>Tr·∫°ng th√°i</th>
                  <th style={{ width: '10%' }}>∆Øu ti√™n</th>
                </tr>
              </thead>
              <tbody>
                {tasks
                  .filter(t => t.name.toLowerCase().includes(search.toLowerCase()))
                  .map((t, i) => (
                  <tr key={i}>
                    <td>{t.name}</td>
                    <td className="text-muted">{t.owner}</td>
                    <td className="text-muted">{t.due}</td>
                    <td>
                      <select className="form-select form-select-sm pill-select" defaultValue={t.status}>
                        <option value="ƒêang l√†m" style={{ color: '#92400e' }}>ƒêang l√†m</option>
                        <option value="Ho√†n th√†nh" style={{ color: '#166534' }}>Ho√†n th√†nh</option>
                        <option value="T·∫°m ho√£n" style={{ color: '#991B1B' }}>T·∫°m ho√£n</option>
                      </select>
                    </td>
                    <td className="fw-semibold" style={priorityColor(t.priority)}>{t.priority}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </UserLayout>
  );
}


