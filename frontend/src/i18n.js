import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

const resources = {
  vi: {
    translation: {
      general: 'C√†i ƒë·∫∑t chung',
      language: 'Ng√¥n ng·ªØ h·ªá th·ªëng',
      theme: 'M√†u n·ªÅn',
      light: 'S√°ng',
      dark: 'T·ªëi',
      notifications: 'Th√¥ng b√°o',
      allowNotifications: 'Cho ph√©p th√¥ng b√°o',
      save: 'L∆∞u c√†i ƒë·∫∑t',
      searchPlaceholder: 'T√¨m ki·∫øm s·ª± ki·ªán...',
      joinEvent: 'Tham gia s·ª± ki·ªán',
      createEvent: 'T·∫°o s·ª± ki·ªán',
      languages: { vi: 'Ti·∫øng Vi·ªát', en: 'English' },
      settings: {
        title: 'C√†i ƒë·∫∑t',
        subtitle: 'Ch·ªânh s·ª≠a c√°c c√†i ƒë·∫∑t h·ªá th·ªëng c·ªßa b·∫°n.',
        tabs: {
          general: 'General Settings',
          agents: "Agents' Settings",
          users: "Users' Settings",
          maintenance: 'Maintenance',
          security: 'Security'
        }
      },
      sections: { main: 'CH√çNH', settings: 'C√ÄI ƒê·∫∂T' },
      nav: {
        home: 'Trang ch·ªß',
        profile: 'H·ªì s∆°',
        members: 'Th√†nh vi√™n',
        stats: 'S·ªë li·ªáu',
        calendar: 'L·ªãch',
        task: 'C√¥ng vi·ªác',
        risk: 'R·ªßi ro',
        documents: 'T√†i li·ªáu',
        notifications: 'Th√¥ng b√°o',
        settings: 'C√†i ƒë·∫∑t',
        events: 'S·ª± ki·ªán'
      },
      actions: {
        editProfile: 'Ch·ªânh s·ª≠a h·ªì s∆°',
        saveChanges: 'L∆∞u thay ƒë·ªïi',
        cancel: 'H·ªßy',
        viewDetails: 'Xem chi ti·∫øt',
        join: 'Tham gia',
        createEvent: 'T·∫°o s·ª± ki·ªán',
        logout: 'ƒêƒÉng xu·∫•t'
      },
      profile: {
        title: 'H·ªì s∆° c·ªßa t√¥i',
        fullName: 'H·ªç v√† t√™n',
        email: 'Email',
        phone: 'S·ªë ƒëi·ªán tho·∫°i',
        bio: 'Bio',
        details: 'Th√¥ng tin chi ti·∫øt',
        highlight: 'ƒêi·ªÉm s√°ng v·ªÅ b·∫°n',
        tags: 'Ban tham gia',
        totalEvents: 'T·ªïng s·ªë s·ª± ki·ªán ƒë√£ tham gia',
        accountStatus: 'Tr·∫°ng th√°i t√†i kho·∫£n',
        verified: '‚úì ƒê√£ x√°c th·ª±c',
        notVerified: '‚è≥ Ch∆∞a x√°c th·ª±c'
      },
      membersPage: { title: 'Th√†nh vi√™n', search: 'Search', sortBy: 'S·∫Øp x·∫øp', newest: 'M·ªõi nh·∫•t', oldest: 'C≈© nh·∫•t' },
      avatar: { view: 'Xem ·∫£nh ƒë·∫°i di·ªán', change: 'Thay ƒë·ªïi ·∫£nh ƒë·∫°i di·ªán' },
      footer: {
        product: 'S·∫£n ph·∫©m',
        support: 'H·ªó tr·ª£',
        follow: 'Theo d√µi ch√∫ng t√¥i',
        eventAtFPT: 'N·ªÅn t·∫£ng qu·∫£n l√Ω s·ª± ki·ªán d√†nh cho sinh vi√™n FPT',
        login: 'ƒêƒÉng nh·∫≠p',
        signup: 'ƒêƒÉng k√Ω',
        contact: 'Li√™n h·ªá',
        about: 'V·ªÅ ch√∫ng t√¥i',
        policy: 'Ch√≠nh s√°ch',
        copyright: '¬© 2025 myFEvent. T·∫•t c·∫£ ƒë√£ ƒë∆∞·ª£c b·∫£o h·ªô.'
      },
      home: {
        title: 'Trang ch·ªß',
        allEvents: 'C√°c s·ª± ki·ªán t·∫°i tr∆∞·ªùng ƒêH FPT',
        blog: 'Blog',
        status: 'Tr·∫°ng th√°i',
        sort: 'S·∫Øp x·∫øp',
        noEvents: 'Kh√¥ng c√≥ s·ª± ki·ªán ph√π h·ª£p.',
        noPosts: 'Ch∆∞a c√≥ b√†i vi·∫øt n√†o.',
        statuses: { all: 'T·∫•t c·∫£', upcoming: 'S·∫Øp di·ªÖn ra', ongoing: 'ƒêang di·ªÖn ra', past: 'ƒê√£ k·∫øt th√∫c' },
        sorts: { newest: 'M·ªõi nh·∫•t', oldest: 'C≈© nh·∫•t', az: 'A-Z' }
      },
      riskPage: {
        title: 'R·ªßi ro',
        headerTitle: '‚ö†Ô∏è Qu·∫£n l√Ω R·ªßi ro',
        headerSubtitle: 'Theo d√µi, gi·∫£m thi·ªÉu v√† x·ª≠ l√Ω r·ªßi ro c·ªßa s·ª± ki·ªán',
        stats: { high: 'M·ª©c ƒë·ªô cao', resolved: 'ƒê√£ x·ª≠ l√Ω' },
        search: 'T√¨m ki·∫øm r·ªßi ro...',
        sortBy: 'S·∫Øp x·∫øp theo',
        filters: { allStatus: 'T·∫•t c·∫£ tr·∫°ng th√°i', allLevel: 'T·∫•t c·∫£ m·ª©c ƒë·ªô' },
        add: 'Th√™m r·ªßi ro',
        columns: { name: 'T√™n r·ªßi ro', owner: 'Ng∆∞·ªùi ch·ªãu tr√°ch nhi·ªám', status: 'Tr·∫°ng th√°i', level: 'M·ª©c ƒë·ªô' },
        statuses: { processing: 'ƒêang x·ª≠ l√Ω', done: 'ƒê√£ x·ª≠ l√Ω', hold: 'T·∫°m ho√£n' }
      },
      taskPage: {
        title: 'C√¥ng vi·ªác',
        headerTitle: 'üìã Qu·∫£n l√Ω Nhi·ªám v·ª•',
        headerSubtitle: 'Theo d√µi v√† qu·∫£n l√Ω t·∫•t c·∫£ c√°c nhi·ªám v·ª• c·ªßa s·ª± ki·ªán',
        stats: { completed: 'Ho√†n th√†nh', high: '∆Øu ti√™n cao' },
        searchPlaceholder: 'üîç T√¨m ki·∫øm nhi·ªám v·ª•...',
        search: 'T√¨m ki·∫øm',
        sortBy: 'S·∫Øp x·∫øp theo',
        filters: { allStatus: 'T·∫•t c·∫£ tr·∫°ng th√°i', allPriority: 'T·∫•t c·∫£ m·ª©c ƒë·ªô' },
        add: 'Th√™m nhi·ªám v·ª•',
        columns: { name: 'T√™n nhi·ªám v·ª•', owner: 'Ng∆∞·ªùi ph·ª• tr√°ch', due: 'H·∫°n ch√≥t', status: 'Tr·∫°ng th√°i', priority: 'M·ª©c ƒë·ªô' },
        detail: {
          title: 'Chi ti·∫øt nhi·ªám v·ª•',
          name: 'T√™n nhi·ªám v·ª•',
          description: 'M√¥ t·∫£',
          owner: 'Ng∆∞·ªùi ph·ª• tr√°ch',
          due: 'H·∫°n ch√≥t',
          status: 'Tr·∫°ng th√°i',
          priority: 'M·ª©c ƒë·ªô',
          delete: 'X√≥a nhi·ªám v·ª•',
          noDesc: 'Ch∆∞a c√≥ m√¥ t·∫£'
        },
        statuses: { doing: 'ƒêang l√†m', done: 'Ho√†n th√†nh', hold: 'T·∫°m ho√£n' },
        empty: 'Kh√¥ng t√¨m th·∫•y nhi·ªám v·ª• n√†o'
      }
    }
  },
  en: {
    translation: {
      general: 'General',
      language: 'System language',
      theme: 'Theme',
      light: 'Light',
      dark: 'Dark',
      notifications: 'Notifications',
      allowNotifications: 'Allow notifications',
      save: 'Save settings',
      searchPlaceholder: 'Search events...',
      joinEvent: 'Join event',
      createEvent: 'Create event',
      languages: { vi: 'Vietnamese', en: 'English' },
      settings: {
        title: 'Settings',
        subtitle: 'Change your system preferences.',
        tabs: {
          general: 'General Settings',
          agents: "Agents' Settings",
          users: "Users' Settings",
          maintenance: 'Maintenance',
          security: 'Security'
        }
      },
      sections: { main: 'MAIN', settings: 'SETTINGS' },
      nav: {
        home: 'Home',
        profile: 'Profile',
        members: 'Members',
        stats: 'Dashboard',
        calendar: 'Calendar',
        task: 'Tasks',
        risk: 'Risks',
        documents: 'Documents',
        notifications: 'Notifications',
        settings: 'Settings',
        events: 'Events'
      },
      actions: {
        editProfile: 'Edit profile',
        saveChanges: 'Save changes',
        cancel: 'Cancel',
        viewDetails: 'View details',
        join: 'Join',
        createEvent: 'Create event',
        logout: 'Logout'
      },
      profile: {
        title: 'My profile',
        fullName: 'Full name',
        email: 'Email',
        phone: 'Phone',
        bio: 'Bio',
        details: 'Details',
        highlight: 'Your highlights',
        tags: 'Teams',
        totalEvents: 'Total events joined',
        accountStatus: 'Account status',
        verified: '‚úì Verified',
        notVerified: '‚è≥ Not verified'
      },
      membersPage: { title: 'Members', search: 'Search', sortBy: 'Sort by', newest: 'Newest', oldest: 'Oldest' },
      avatar: { view: 'View avatar', change: 'Change avatar' },
      footer: {
        product: 'Product',
        support: 'Support',
        follow: 'Follow us',
        eventAtFPT: 'Event management platform for FPT students',
        login: 'Login',
        signup: 'Sign up',
        contact: 'Contact',
        about: 'About us',
        policy: 'Policy',
        copyright: '¬© 2025 myFEvent. All rights reserved.'
      },
      home: {
        title: 'Home',
        allEvents: 'Events at FPT University',
        blog: 'Blog',
        status: 'Status',
        sort: 'Sort',
        noEvents: 'No matching events.',
        noPosts: 'No posts yet.',
        statuses: { all: 'All', upcoming: 'Upcoming', ongoing: 'Ongoing', past: 'Ended' },
        sorts: { newest: 'Newest', oldest: 'Oldest', az: 'A-Z' }
      },
      riskPage: {
        title: 'Risks',
        headerTitle: '‚ö†Ô∏è Risk Management',
        headerSubtitle: 'Track, mitigate and handle event risks',
        stats: { high: 'High level', resolved: 'Resolved' },
        search: 'Search risks...',
        sortBy: 'Sort by',
        filters: { allStatus: 'All statuses', allLevel: 'All levels' },
        add: 'Add risk',
        columns: { name: 'Risk name', owner: 'Owner', status: 'Status', level: 'Level' },
        statuses: { processing: 'Processing', done: 'Resolved', hold: 'On hold' }
      },
      taskPage: {
        title: 'Tasks',
        headerTitle: 'üìã Task Management',
        headerSubtitle: 'Track and manage all event tasks',
        stats: { completed: 'Completed', high: 'High priority' },
        searchPlaceholder: 'üîç Search tasks...',
        search: 'Search',
        sortBy: 'Sort by',
        filters: { allStatus: 'All statuses', allPriority: 'All priorities' },
        add: 'Add task',
        columns: { name: 'Task name', owner: 'Assignee', due: 'Deadline', status: 'Status', priority: 'Priority' },
        detail: {
          title: 'Task details',
          name: 'Task name',
          description: 'Description',
          owner: 'Assignee',
          due: 'Deadline',
          status: 'Status',
          priority: 'Priority',
          delete: 'Delete task',
          noDesc: 'No description'
        },
        statuses: { doing: 'Doing', done: 'Done', hold: 'On hold' },
        empty: 'No tasks found'
      }
    }
  }
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources,
    fallbackLng: 'vi',
    interpolation: { escapeValue: false },
    detection: {
      order: ['localStorage', 'navigator', 'htmlTag'],
      caches: ['localStorage']
    }
  });

export default i18n;


